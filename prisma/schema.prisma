// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model VisaService {
  id                String   @id @default(cuid())
  name              String
  code              String   @unique
  price             String
  description       String
  documentsRequired Json
  documentsProvided Json
  status            String   @default("active")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model ContactMessage {
  id              String   @id @default(cuid())
  fullName        String
  email           String
  phone           String?
  serviceInterest String?
  message         String
  status          String   @default("unread")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model TourPackage {
  id            String   @id @default(cuid())
  title         String
  description   String
  duration      String
  price         String
  image         String   @db.LongText // Changed to LongText to store base64 image data
  imageAlt      String
  category      String   @default("all")
  status        String   @default("active")
  featured      Boolean  @default(false)
  includedItems Json
  highlights    Json
  itinerary     Json
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Inquiry {
  id         String        @id @default(cuid())
  type       InquiryType
  name       String
  email      String
  phone      String?
  message    String?
  travelDate DateTime?
  status     InquiryStatus @default(NEW)
  metadata   Json // Store type-specific data (country, visaType, tourTitle, etc.)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

enum InquiryType {
  VISA
  TOUR
}

enum InquiryStatus {
  NEW
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}
